extends layout.pug

block body
  if user
    section
      != markdown || ''
    form.visa-application(action=altLocales[getLocale()] method='post')
      section
        if questions && questions.length > 0
          each question in questions
            h1= __(question.title)
            case question.type
              when 'text'
              when 'email'
              when 'date'
                input(type=question.type id=question.id name=question.id required='required' value='')
              when 'country'
                input.easyautocomplete-country(type='text' id=question.id name=question.id required='required' value='')
              when 'single'
              when 'multiple'
                for answer in question.answers
                  - let answerId = question.id + '.' + answer
                  br
                  input(type=(question.type === 'multiple' ? 'checkbox' : 'radio') checked=false id=answerId name=(question.id + question.type === 'multiple' ? '[]' : '') required=(question.type === 'multiple' ? false : 'required') value=answer)
                  label(for=answerId)= __(answer)
                br
              when 'yes/no'
              when 'yes/no;textifyes'
              when 'yes/no;textifno'
                br
                input(type='radio' checked=false data-question=question.id data-yesno='yes' id=(question.id + '.yes') name=question.id required='required' value='yes')
                label(for=(question.id + '.yes'))= __('Yes')
                br
                input(type='radio' checked=false data-question=question.id data-yesno='no' id=(question.id + '.no') name=question.id required='required' value='no')
                label(for=(question.id + '.no'))= __('No')
                br
                if question.subtitleif && (question.type === 'yes/no;textifyes' || question.type === 'yes/no;textifno')
                  div.explanation(data-question=question.id data-yesno=question.type.split(';').filter(part => part.startsWith('textif')).map(part => part.substr('textif'.length)).reduce((prev, next) => prev + next, ''))
                    br
                    h2= __(question.subtitleif)
                    input(type='text' id=(question.id + '.explanation') name=(question.id + '.explanation') value='')
            if question.subtitle
              br
              h2= __(question.subtitle)
            br
            br
        div.buttons
          button(type='submit')= __('Continue').toUpperCase()
